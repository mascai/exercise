/*
https://stepik.org/lesson/311541/step/5?unit=293969

Источником данной задачи послужил региональный этап Всероссийской олимпиады школьников по информатике 2009-2010 года.

Дипломы

Когда Петя учился в школе, он часто участвовал в олимпиадах по информатике, математике и физике. Так как он был достаточно способным мальчиком и усердно учился, то на многих из этих олимпиад он получал дипломы. К окончанию школы у него скопилось nn дипломов, причем, как оказалось, все они имели одинаковые размеры: ww – в ширину и hh – в высоту.

Сейчас Петя учится в одном из лучших российских университетов и живет в общежитии со своими одногруппниками. Он решил украсить свою комнату, повесив на одну из стен свои дипломы за школьные олимпиады. Так как к бетонной стене прикрепить дипломы достаточно трудно, то он решил купить специальную доску из пробкового дерева, чтобы прикрепить ее к стене, а к ней – дипломы. Для того чтобы эта конструкция выглядела более красиво, Петя хочет, чтобы доска была квадратной и занимала как можно меньше места на стене. Каждый диплом должен быть размещен строго в прямоугольнике размером ww на hh. Прямоугольники, соответствующие различным дипломам, не должны иметь общих внутренних точек.

Требуется написать программу, которая вычислит минимальный размер стороны доски, которая потребуется Пете для размещения всех своих дипломов.

Входные данные

Входной файл содержит три целых числа: ww, hh, nn (1 \leq w, h, n \leq 10^91≤ w, h, n ≤ 10 
9
 ).

Выходные данные

В выходной файл необходимо вывести ответ на поставленную задачу.
*/

#include <bits/stdc++.h>

using namespace std;

#define ll long long

ll calculateN(ll w, ll h, ll curLen) {
    return (curLen / w) * (curLen / h);
}

ll getMinLen(ll w, ll h, ll n) {
    ll low = 0;
    ll high = max(w, h) * n;
    while (low + 1< high) {
        ll mid = high - (high - low) / 2;
        if (calculateN(w, h, mid) >= n) {
            high = mid;
        } else {
            low = mid;
        }
    }
    return high;
}


int main() {
    ll w, h, n;
    cin >> w >> h >> n;
    cout << getMinLen(w, h, n);
}
