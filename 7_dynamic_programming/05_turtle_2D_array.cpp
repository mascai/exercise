/*
https://stepik.org/lesson/307327/step/2?unit=289415


Черепашка

В верхнем-левом углу таблицы сидит черепаха. Она умеет ходить только вниз, вправо и вниз-вправо. В каждой клетке записано число, и черепашка прибавляет его к своей сумме, когда оказывается на клетке. Черепаха хочет попасть в нижнюю-правую клетку, получив в итоге минимально возможную сумму. Помогите ей - посчитайте, какую сумму она в итоге наберет?

Входные данные

В первой строке входных данных записано два числа nn, mm (1 \leq n, m \leq 10001≤n,m≤1000) - количество строк и столбцов в таблице.

В следующих nn строках записано по mm чисел - данная таблица. Каждое число в таблице по модулю не превышает 10001000. 

Выходные данные

Выведите единственное число - минимальную сумму, которую может набрать черепашка.

Sample Input 1:

4 4
1 3 5 2
-1 4 2 9
5 -6 1 -4
-6 6 -2 2
Sample Output 1:

-7
Sample Input 2:

2 4
1 2 3 4
5 6 7 8
Sample Output 2:

14


*/


#include <bits/stdc++.h>

using namespace std;


int main() {
    int n, m;
    cin >> n >> m;
    if (n == 0) {
        cout << 1; // corner case 
        return 0;    
    }
    vector<vector<long long>> arr(n, vector<long long>(m));
    vector<vector<long long>> dp(n, vector<long long>(m));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> arr[i][j];
        }
    }
    dp[0][0] = arr[0][0];
    for (int i = 1; i < m; ++i) {
        dp[0][i] = dp[0][i - 1] + arr[0][i];
    }
    for (int i = 1; i < n; ++i) {
        dp[i][0] = dp[i - 1][0] + arr[i][0];
    }
    for (int i = 1; i < n; ++i) {
        for (int j = 1; j < m; ++j) {
            dp[i][j] = min(dp[i - 1][j], min(dp[i - 1][j - 1], dp[i][j - 1])) + arr[i][j];
        }
    }
    cout << dp[n - 1][m - 1];
    return 0;
}
