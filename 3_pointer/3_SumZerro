/*


Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0?
Find all unique triplets in the array which gives the sum of zero.

Note:

    Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
    The solution set must not contain duplicate triplets.

    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2) 


*/

// Solution 1
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        int n = nums.size();
        if (n < 3) {
            return res;
        }
        sort(begin(nums), end(nums));
        for (int i = 0; i < n; ++i) {
            if (i > 0 and nums[i] == nums[i - 1]) {
                continue;
            }
            int l = i + 1;
            int r = n - 1;
            while (l < r) {
                long long sum = 0LL + nums[i] + nums[l] + nums[r];
                if (sum > 0) {
                    --r;
                } else if (sum < 0) {
                    ++l;
                } else { // sum = 0
                    res.push_back({nums[i], nums[l], nums[r]});
                    while (l + 1 < n and nums[l] == nums[l + 1]) {
                        ++l;
                    }
                    while (r - 1 >= 0 and nums[r] == nums[r - 1]) {
                        --r;
                        
                    }
                    ++l;
                    --r;
                }
            }
        }
        return res;
    }
};

// Solution 2
vector<vector<int> > Solution::threeSum(vector<int> &a) {
    int n = a.size(), sum = 0;
    sort(begin(a), end(a));
    vector<vector<int>>v;
    for (int i = 0; i < n  - 2; i++){
        int l = i + 1, r = n - 1;
        while (l < r){
            sum = a[i] + a[l] + a[r];
            if (sum == 0){
                vector<int>tmp = {a[i], a[l], a[r]};
                sort(begin(tmp), end(tmp));
                int f = 0;
                for (auto& item : v){
                    if (item == tmp){
                        f = 1;
                    }
                }
                if (f == 0){
                    v.push_back(tmp);
                }
                --r;
                l++;
            } else if (sum > 0 ){
                --r;
            } else {
                l++;
            }
        }
    }
    return v;
}
